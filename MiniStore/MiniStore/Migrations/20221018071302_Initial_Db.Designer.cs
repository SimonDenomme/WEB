// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniStore.Data;

namespace MiniStore.Migrations
{
    [DbContext(typeof(MiniStoreContext))]
    [Migration("20221018071302_Initial_Db")]
    partial class Initial_Db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "53e77889-f3db-493d-a29d-d3072cfd4a0e",
                            ConcurrencyStamp = "2b1e63ca-2d2e-4d53-988f-bb513d63ffa8",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "a90a5b13-6698-4df3-bf52-1d6e2eca2360",
                            RoleId = "53e77889-f3db-493d-a29d-d3072cfd4a0e"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MiniStore.Domain.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "a90a5b13-6698-4df3-bf52-1d6e2eca2360",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "271261d1-5871-40e8-8d83-f9d8cfc375e0",
                            Email = "admin@test.ca",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@TEST.CA",
                            NormalizedUserName = "ADMIN@TEST.CA",
                            PasswordHash = "AQAAAAEAACcQAAAAENVFHKGjV0w1dIlGCFfzaCTHoF5EAmg1eAxCTHkrovS+tOAzpGU7raZP13uU06DMuQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e1ecc08-4c4b-4e2d-b68b-c44ab1d346a7",
                            TwoFactorEnabled = false,
                            UserName = "admin@test.ca"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dungeons & Dragons"
                        },
                        new
                        {
                            Id = 2,
                            Name = "PathFinder"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GloomHeaven"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cyberpunk Red"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gamma World"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bob@gmail.com",
                            Name = "bob",
                            Text = "allo je mappel bob."
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFrontPage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLuminous")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPainted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NormalPrice")
                        .HasColumnType("float");

                    b.Property<int>("QtyInventory")
                        .HasColumnType("int");

                    b.Property<int>("QtySold")
                        .HasColumnType("int");

                    b.Property<double>("ReducedPrice")
                        .HasColumnType("float");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Minis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Description = "This is a description of Mini 1",
                            ImagePath = "Creature1.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 1",
                            NormalPrice = 20.0,
                            QtyInventory = 5,
                            QtySold = 2,
                            ReducedPrice = 10.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Description = "This is a description of Mini 2",
                            ImagePath = "Creature2.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 2",
                            NormalPrice = 40.0,
                            QtyInventory = 10,
                            QtySold = 4,
                            ReducedPrice = 20.0,
                            SizeId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            Description = "This is a description of Mini 3",
                            ImagePath = "Creature3.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 3",
                            NormalPrice = 60.0,
                            QtyInventory = 15,
                            QtySold = 6,
                            ReducedPrice = 30.0,
                            SizeId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Description = "This is a description of Mini 4",
                            ImagePath = "Creature4.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 4",
                            NormalPrice = 80.0,
                            QtyInventory = 20,
                            QtySold = 8,
                            ReducedPrice = 40.0,
                            SizeId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "This is a description of Mini 5",
                            ImagePath = "Creature5.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 5",
                            NormalPrice = 100.0,
                            QtyInventory = 25,
                            QtySold = 10,
                            ReducedPrice = 50.0,
                            SizeId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "This is a description of Mini 6",
                            ImagePath = "Creature6.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 6",
                            NormalPrice = 120.0,
                            QtyInventory = 30,
                            QtySold = 12,
                            ReducedPrice = 60.0,
                            SizeId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "This is a description of Mini 7",
                            ImagePath = "Creature7.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 7",
                            NormalPrice = 140.0,
                            QtyInventory = 35,
                            QtySold = 14,
                            ReducedPrice = 70.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "This is a description of Mini 8",
                            ImagePath = "Creature8.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 8",
                            NormalPrice = 160.0,
                            QtyInventory = 40,
                            QtySold = 16,
                            ReducedPrice = 80.0,
                            SizeId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Description = "This is a description of Mini 9",
                            ImagePath = "Creature9.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 9",
                            NormalPrice = 180.0,
                            QtyInventory = 45,
                            QtySold = 18,
                            ReducedPrice = 90.0,
                            SizeId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "This is a description of Mini 10",
                            ImagePath = "Creature10.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 10",
                            NormalPrice = 200.0,
                            QtyInventory = 50,
                            QtySold = 20,
                            ReducedPrice = 100.0,
                            SizeId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "This is a description of Mini 11",
                            ImagePath = "Creature11.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 11",
                            NormalPrice = 220.0,
                            QtyInventory = 55,
                            QtySold = 22,
                            ReducedPrice = 110.0,
                            SizeId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "This is a description of Mini 12",
                            ImagePath = "Creature12.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 12",
                            NormalPrice = 240.0,
                            QtyInventory = 60,
                            QtySold = 24,
                            ReducedPrice = 120.0,
                            SizeId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            Description = "This is a description of Mini 13",
                            ImagePath = "Creature13.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 13",
                            NormalPrice = 260.0,
                            QtyInventory = 65,
                            QtySold = 26,
                            ReducedPrice = 130.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "This is a description of Mini 14",
                            ImagePath = "Creature14.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 14",
                            NormalPrice = 280.0,
                            QtyInventory = 70,
                            QtySold = 28,
                            ReducedPrice = 140.0,
                            SizeId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Description = "This is a description of Mini 15",
                            ImagePath = "Creature15.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 15",
                            NormalPrice = 300.0,
                            QtyInventory = 75,
                            QtySold = 30,
                            ReducedPrice = 150.0,
                            SizeId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "This is a description of Mini 16",
                            ImagePath = "Creature16.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 16",
                            NormalPrice = 320.0,
                            QtyInventory = 80,
                            QtySold = 32,
                            ReducedPrice = 160.0,
                            SizeId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Description = "This is a description of Mini 17",
                            ImagePath = "Creature17.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 17",
                            NormalPrice = 340.0,
                            QtyInventory = 85,
                            QtySold = 34,
                            ReducedPrice = 170.0,
                            SizeId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Description = "This is a description of Mini 18",
                            ImagePath = "Creature18.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 18",
                            NormalPrice = 360.0,
                            QtyInventory = 90,
                            QtySold = 36,
                            ReducedPrice = 180.0,
                            SizeId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            Description = "This is a description of Mini 19",
                            ImagePath = "Creature19.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 19",
                            NormalPrice = 380.0,
                            QtyInventory = 95,
                            QtySold = 38,
                            ReducedPrice = 190.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            Description = "This is a description of Mini 20",
                            ImagePath = "Creature20.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 20",
                            NormalPrice = 400.0,
                            QtyInventory = 100,
                            QtySold = 40,
                            ReducedPrice = 200.0,
                            SizeId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            Description = "This is a description of Mini 21",
                            ImagePath = "Creature21.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 21",
                            NormalPrice = 420.0,
                            QtyInventory = 105,
                            QtySold = 42,
                            ReducedPrice = 210.0,
                            SizeId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            Description = "This is a description of Mini 22",
                            ImagePath = "Creature22.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 22",
                            NormalPrice = 440.0,
                            QtyInventory = 110,
                            QtySold = 44,
                            ReducedPrice = 220.0,
                            SizeId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Description = "This is a description of Mini 23",
                            ImagePath = "Creature23.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 23",
                            NormalPrice = 460.0,
                            QtyInventory = 115,
                            QtySold = 46,
                            ReducedPrice = 230.0,
                            SizeId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 5,
                            Description = "This is a description of Mini 24",
                            ImagePath = "Creature24.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 24",
                            NormalPrice = 480.0,
                            QtyInventory = 120,
                            QtySold = 48,
                            ReducedPrice = 240.0,
                            SizeId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 1,
                            Description = "This is a description of Mini 25",
                            ImagePath = "Creature25.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 25",
                            NormalPrice = 500.0,
                            QtyInventory = 125,
                            QtySold = 50,
                            ReducedPrice = 250.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            Description = "This is a description of Mini 26",
                            ImagePath = "Creature26.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 26",
                            NormalPrice = 520.0,
                            QtyInventory = 130,
                            QtySold = 52,
                            ReducedPrice = 260.0,
                            SizeId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            Description = "This is a description of Mini 27",
                            ImagePath = "Creature27.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 27",
                            NormalPrice = 540.0,
                            QtyInventory = 135,
                            QtySold = 54,
                            ReducedPrice = 270.0,
                            SizeId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            Description = "This is a description of Mini 28",
                            ImagePath = "Creature28.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 28",
                            NormalPrice = 560.0,
                            QtyInventory = 140,
                            QtySold = 56,
                            ReducedPrice = 280.0,
                            SizeId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 5,
                            Description = "This is a description of Mini 29",
                            ImagePath = "Creature29.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 29",
                            NormalPrice = 580.0,
                            QtyInventory = 145,
                            QtySold = 58,
                            ReducedPrice = 290.0,
                            SizeId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 1,
                            Description = "This is a description of Mini 30",
                            ImagePath = "Creature30.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 30",
                            NormalPrice = 600.0,
                            QtyInventory = 150,
                            QtySold = 60,
                            ReducedPrice = 300.0,
                            SizeId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            Description = "This is a description of Mini 31",
                            ImagePath = "Creature31.png",
                            IsFrontPage = false,
                            IsLuminous = false,
                            IsPainted = true,
                            Name = "Mini 31",
                            NormalPrice = 620.0,
                            QtyInventory = 155,
                            QtySold = 62,
                            ReducedPrice = 310.0,
                            SizeId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 3,
                            Description = "This is a description of Mini 32",
                            ImagePath = "Creature32.png",
                            IsFrontPage = false,
                            IsLuminous = true,
                            IsPainted = true,
                            Name = "Mini 32",
                            NormalPrice = 640.0,
                            QtyInventory = 160,
                            QtySold = 64,
                            ReducedPrice = 320.0,
                            SizeId = 3,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MiniId")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MiniId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MiniId = 1,
                            Rating = (byte)5,
                            Text = "Good",
                            UserName = "Review 1"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Tiny"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Small"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Large"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Huge"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Gargantuan"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "En inventaire"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Bientôt"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Indisponible"
                        },
                        new
                        {
                            Id = 4,
                            Title = "En rupture de stock"
                        });
                });

            modelBuilder.Entity("MiniStore.Models.Minis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NormalPrice")
                        .HasColumnType("float");

                    b.Property<double>("ReducedPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Minis_1");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MiniStore.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MiniStore.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniStore.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MiniStore.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.HasOne("MiniStore.Entity.Category", "Category")
                        .WithMany("Minis")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniStore.Entity.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniStore.Entity.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Size");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MiniStore.Entity.Review", b =>
                {
                    b.HasOne("MiniStore.Entity.Mini", "Mini")
                        .WithMany("Reviews")
                        .HasForeignKey("MiniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mini");
                });

            modelBuilder.Entity("MiniStore.Entity.Category", b =>
                {
                    b.Navigation("Minis");
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
