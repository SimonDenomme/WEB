// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniStore.Data;

namespace MiniStore.Migrations
{
    [DbContext(typeof(MiniStoreContext))]
    [Migration("20220911175347_MiniPhoto")]
    partial class MiniPhoto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniStore.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Category 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Category 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Category 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Category 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Category 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Category 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Category 12"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsColored")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Minis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Cost = 10.0,
                            Description = "This is a description",
                            Discount = 2.0,
                            IsColored = false,
                            Name = "Mini 1",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Cost = 20.0,
                            Description = "This is a description",
                            Discount = 4.0,
                            IsColored = true,
                            Name = "Mini 2",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Cost = 30.0,
                            Description = "This is a description",
                            Discount = 6.0,
                            IsColored = false,
                            Name = "Mini 3",
                            Price = 60.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Cost = 40.0,
                            Description = "This is a description",
                            Discount = 8.0,
                            IsColored = true,
                            Name = "Mini 4",
                            Price = 80.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Cost = 50.0,
                            Description = "This is a description",
                            Discount = 10.0,
                            IsColored = false,
                            Name = "Mini 5",
                            Price = 100.0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Cost = 60.0,
                            Description = "This is a description",
                            Discount = 12.0,
                            IsColored = true,
                            Name = "Mini 6",
                            Price = 120.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Cost = 70.0,
                            Description = "This is a description",
                            Discount = 14.0,
                            IsColored = false,
                            Name = "Mini 7",
                            Price = 140.0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Cost = 80.0,
                            Description = "This is a description",
                            Discount = 16.0,
                            IsColored = true,
                            Name = "Mini 8",
                            Price = 160.0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Cost = 90.0,
                            Description = "This is a description",
                            Discount = 18.0,
                            IsColored = false,
                            Name = "Mini 9",
                            Price = 180.0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Cost = 100.0,
                            Description = "This is a description",
                            Discount = 20.0,
                            IsColored = true,
                            Name = "Mini 10",
                            Price = 200.0
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MiniId")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MiniId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MiniId = 1,
                            Rating = (byte)5,
                            Text = "Good",
                            UserName = "Review 1"
                        });
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.HasOne("MiniStore.Entity.Category", "Category")
                        .WithMany("Minis")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MiniStore.Entity.Review", b =>
                {
                    b.HasOne("MiniStore.Entity.Mini", "Mini")
                        .WithMany("Reviews")
                        .HasForeignKey("MiniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mini");
                });

            modelBuilder.Entity("MiniStore.Entity.Category", b =>
                {
                    b.Navigation("Minis");
                });

            modelBuilder.Entity("MiniStore.Entity.Mini", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
